{"version":3,"sources":["Components/ErrorBoundary.js","Components/Typeahead/Typeahead.js","Components/Typeahead/index.js","Components/SearchBar/index.js","Components/SearchBar/SearchBar.js","Components/Modal/index.js","Components/Modal/Modal.js","Components/Substitutions/index.js","Components/Substitutions/Substitutions.js","Components/IngredientsModal/IngredientsModal.js","Components/IngredientsModal/index.js","Components/RecipeInfo/RecipeInfo.js","Components/RecipeInfo/index.js","Components/HealthInfo/index.js","Components/HealthInfo/HealthInfo.js","Components/RecipeItem/index.js","Components/RecipeItem/RecipeItem.js","Components/RecipesContainer/index.js","Components/RecipesContainer/RecipesContainer.js","Components/App/App.js","Components/App/index.js","registerServiceWorker.js","index.js","Components/App/assets/vegetarian-mark.svg"],"names":["ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","info","setState","react_default","a","createElement","className","children","Component","Typeahead","suggestions","onSuggestionsFetchRequested","bind","assertThisInitialized","onSuggestionsClearRequested","getSuggestionValue","onSuggestionHighlighted","renderSuggestion","handleChange","handleBlur","handleFocus","suggestion","recipe","query","_ref","parts","isHighlighted","split","RegExp","concat","map","part","i","toLowerCase","key","_ref2","onChange","inputValue","_ref3","value","trim","length","filter","indexOf","category","cuisine","undefined","slice","e","newValue","_ref4","method","toggleFocus","_this$props","inputProps","placeholder","type","onBlur","onFocus","Components_ErrorBoundary","dist_default","defaultProps","SearchBar","onlyVegan","handleSubmit","handleCheckboxChange","handleValueChange","handleClick","preventDefault","onSubmit","replace","target","checked","randomIndex","Math","floor","random","temp","shuffleArray","onClick","Components_Typeahead","Modal","handleKeyUp","keyCode","onClose","document","removeEventListener","modal","contains","addEventListener","body","classList","add","remove","_this2","ref","node","modalBackdrop","buttonText","Substitutions","checkbox","substitutes","measurement","ingredient","match","substitutions","substitute","IngredientsModal","modalOpen","stopwords","checkboxes","allChecked","mounted","handleToggle","noError","getSubstitutes","arguments","ingredients","item","Components_Substitutions","id","checkboxesState","JSON","parse","stringify","uncheckedItems","re","join","substring","processIngredients","j","includes","forEach","prevState","_this3","ingredientsInfo","fetch","then","res","json","result","console","ingredientInputs","_this4","modalOpenError","getIngredientInputs","Components_Modal","findSubstitutes","RecipeInfo","healthLabels","label","Components_IngredientsModal","title","rel","href","url","HealthInfo","caloriesInfo","calories","yield","round","nutritionChart","digest","chartInfo","numServings","data","push","total","labels","datasets","backgroundColor","legend","boxWidth","fontSize","fontFamily","fontColor","responsive","maintainAspectRatio","getChartInfo","es","options","RecipeItem","src","image","alt","Components_RecipeInfo","Components_HealthInfo","RecipesContainer","recipeItems","recipes","Components_RecipeItem","ingredientLines","style","suggestionsOpen","marginTop","processQuery","queryArray","queryString","App","recipesResult","noResults","inputFocus","loading","getRequest","recipesContainer","Components_RecipesContainer","vegSign","Components_SearchBar","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","render","Components_App","getElementById","URL","process","origin","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0edb6606.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      error: true\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div className = \"error\">Something went wrong.</div>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport ErrorBoundary from '../ErrorBoundary';\nimport Autosuggest from 'react-autosuggest';\nimport PropTypes from 'prop-types';\n\nimport './Typeahead.css';\n\nclass Typeahead extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: []\n    };\n\n    this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n    this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n    this.getSuggestionValue = this.getSuggestionValue.bind(this);\n    this.onSuggestionHighlighted = this.onSuggestionHighlighted.bind(this);\n    this.renderSuggestion = this.renderSuggestion.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n\n  getSuggestionValue(suggestion) {\n    return suggestion.recipe;\n  }\n\n  renderSuggestion(suggestion, { query, isHighlighted }) {\n    let parts = suggestion.recipe.split(new RegExp(`(${query})`, 'gi'));\n    return (\n      <div>\n        {\n          parts.map((part, i) => {\n            const className = part.toLowerCase() === query.toLowerCase() ? \"highlight\" : null;\n\n            return (<span key = {i} className = {className}>{part}</span>);\n          })\n        }\n      </div>\n    );\n  }\n\n  onSuggestionHighlighted({ suggestion }) {\n    if(suggestion)\n      this.props.onChange(suggestion.recipe);\n  }\n\n  onSuggestionsFetchRequested({ value }) {\n    const inputValue = value.trim().toLowerCase();\n\n    if(inputValue.length === 0) return [];\n\n    const suggestions = this.props.suggestions.filter(suggestion => {\n\n      let recipe = suggestion.recipe.toLowerCase().indexOf(inputValue) !== -1;\n      let category = false;\n      let cuisine = false;\n\n      if(suggestion.category !== undefined)\n        category = suggestion.category.slice(0, inputValue.length) === inputValue;\n\n      if(suggestion.cuisine !== undefined)\n        cuisine = suggestion.cuisine.slice(0, inputValue.length) === inputValue;\n\n      return recipe || category || cuisine;\n    });\n\n    this.setState({\n      suggestions: suggestions.slice(0, 5)\n    });\n  }\n\n  onSuggestionsClearRequested() {\n    this.setState({\n      suggestions: []\n    });\n  }\n\n  handleChange(e, { newValue, method }) {\n    this.props.onChange(newValue);\n  }\n\n  handleFocus(e) {\n    this.props.toggleFocus();\n  }\n\n  handleBlur(e) {\n    this.props.toggleFocus();\n  }\n\n  render() {\n    const { value, placeholder } = this.props;\n    const inputProps = {\n      placeholder: placeholder,\n      value: value,\n      type: \"search\",\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      onFocus: this.handleFocus\n    };\n\n    return (\n      <div className = \"typeahead\">\n        <ErrorBoundary>\n          <Autosuggest\n            suggestions = {this.state.suggestions}\n            onSuggestionsFetchRequested = {this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested = {this.onSuggestionsClearRequested}\n            onSuggestionHighlighted = {this.onSuggestionHighlighted}\n            getSuggestionValue = {this.getSuggestionValue}\n            renderSuggestion = {this.renderSuggestion}\n            inputProps = {inputProps}\n          />\n        </ErrorBoundary>\n      </div>\n    );\n  }\n}\n\nTypeahead.defaultProps = {\n  suggestions: [],\n  placeholder: \"\"\n};\n\n\nTypeahead.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  toggleFocus: PropTypes.func.isRequired,\n  suggestions: PropTypes.array.isRequired,\n  placeholder: PropTypes.string\n};\n\nexport default Typeahead;\n","import Typeahead from './Typeahead';\n\nexport default Typeahead;\n","import SearchBar from './SearchBar';\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Typeahead from '../Typeahead';\n\nimport './SearchBar.css';\n\nconst shuffleArray = (a) => {\n  let temp;\n  let random;\n\n  for (let i = a.length - 1; i > 0; i--) {\n    random = Math.floor(Math.random() * (i + 1));\n    temp = a[i];\n    a[i] = a[random];\n    a[random] = temp;\n  }\n\n};\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      onlyVegan: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.toggleFocus = this.toggleFocus.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let query = this.state.value.trim();\n\n    this.setState({\n      value: query\n    });\n\n    if(query.length)\n      this.props.onSubmit(query.toLowerCase(), this.state.onlyVegan);\n\n  }\n\n  handleValueChange(value) {\n    this.setState({\n      value: typeof value !== \"undefined\" ? value.replace(/[^a-zA-Z\\s]/g, \"\") : \"\"\n    });\n  }\n\n  toggleFocus() {\n    this.props.toggleFocus();\n  }\n\n  handleCheckboxChange(e) {\n    this.setState({\n      onlyVegan: e.target.checked\n    });\n  }\n\n  handleClick(e) {\n    let randomIndex = Math.floor(Math.random() * this.props.suggestions.length);\n    this.props.onSubmit(this.props.suggestions[randomIndex].recipe, this.state.onlyVegan);\n  }\n\n  render() {\n\n    shuffleArray(this.props.suggestions);\n\n    return (\n      <div className = \"search-bar\">\n        <form onSubmit = {this.handleSubmit}>\n          <label className = \"only-vegan\">\n            <input\n              onChange = {this.handleCheckboxChange}\n              type = \"checkbox\" />\n            <span className = \"checkmark\"/>\n              Vegan Only\n          </label>\n          <button type=\"button\" className = \"random-recipe\" onClick = {this.handleClick}>Random Recipe</button>\n          <br />\n          <Typeahead\n            value = {this.state.value}\n            onChange = {this.handleValueChange}\n            toggleFocus = {this.toggleFocus}\n            placeholder = \"What would you like to eat?\"\n            suggestions = {this.props.suggestions}\n          />\n        </form>\n      </div>\n    );\n  }\n\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  toggleFocus: PropTypes.func.isRequired,\n  suggestions: PropTypes.array\n};\n\nexport default SearchBar;\n","import Modal from './Modal';\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleKeyUp(e) {\n    if(e.keyCode === 27) {\n      e.preventDefault();\n      this.props.onClose();\n      document.removeEventListener(\"keyup\", this.handleKeyUp, false);\n    }\n  }\n\n  handleClick(e) {\n    if(!this.modal.contains(e.target)) {\n      this.props.onClose();\n      document.removeEventListener(\"click\", this.handleClick, false);\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keyup\", this.handleKeyUp, false);\n    document.addEventListener(\"click\", this.handleClick, false);\n    document.body.classList.add(\"modal-open\");\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keyup\", this.handleKeyUp, false);\n    document.removeEventListener(\"click\", this.handleClick, false);\n    document.body.classList.remove(\"modal-open\");\n  }\n\n  render() {\n\n    return (\n      <div ref = {node => this.modalBackdrop = node} className = \"modal-backdrop\">\n        <div ref = {node => this.modal = node} className = \"modal\">\n          <div className = \"modal-content\">\n            {this.props.children}\n          </div>\n          <button type=\"button\" className = \"close-modal\" onClick = {this.props.onClose}>\n            {this.props.buttonText ? this.props.buttonText: \"X\"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  buttonText: PropTypes.string\n};\n\nexport default Modal;\n","import Substitutions from './Substitutions';\n\nexport default Substitutions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Substitutions.css';\n\nconst Substitutions = props => {\n\n  if(props.checkbox.substitutes === null) {\n    return (\n      <div className = \"no-subs\">Sorry, no substitutes found.</div>\n    );\n  }\n  let measurement = props.checkbox.substitutes.ingredient.match(/\\((.*)\\)/);\n  let substitutions = props.checkbox.substitutes.substitutions.map((substitute, i) => {\n      return (<li key = {i}>{substitute}</li>);\n  });\n\n  return (\n    <div className = \"substitutions\">\n      {measurement !== null &&\n        <div className = \"measurement\">\n          {measurement[0]}\n        </div>\n      }\n      <ul className = \"substitutions-list\">{substitutions}</ul>\n    </div>\n  );\n\n};\n\nSubstitutions.propTypes = {\n  checkbox: PropTypes.object.isRequired\n};\n\nexport default Substitutions;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\nimport Substitutions from '../Substitutions';\n\nimport './IngredientsModal.css';\n\n/*\n* Removes stopwords, parenthesis, punctuation from ingredient line in all uncheckedItems\n*/\nconst processIngredients = (uncheckedItems, stopwords) => {\n\n  const re = new RegExp('\\\\b(' + stopwords.join('|') + ')\\\\b', 'g');\n\n  for(let i = 0; i < uncheckedItems.length; i++) {\n    let newValue = uncheckedItems[i].value.toLowerCase();\n    if(newValue.indexOf(\" or \") >= 0) {\n      newValue = newValue.substring(0, newValue.indexOf(\" or \"));\n    }\n    uncheckedItems[i].value = newValue.replace(/ *\\([^)]*\\) */g, \" \").replace(/[^a-zA-Z\\s]/g, \" \").replace(re, \" \").replace(/\\s\\s+/g, \" \").trim();\n  }\n\n};\n\nconst getSubstitutes = (uncheckedItems, substitutions) => {\n  for(let i = 0; i < uncheckedItems.length; i++) {\n    let substitutes = null;\n\n    for(let j = 0; j < substitutions.length; j++) {\n      let ingredients = substitutions[j].ingredient.toLowerCase().replace(/ *\\([^)]*\\) */g, '').split(\";\");\n      if(ingredients.includes(uncheckedItems[i].value)) {\n        substitutes = substitutions[j];\n        break;\n      }\n    }\n\n    uncheckedItems[i].substitutes = substitutes;\n\n\n    // substitutes = substitutions.filter(item => {\n    //   let ingredients = item.ingredient.toLowerCase().replace(/ *\\([^)]*\\) */g, '').split(\";\");\n    //   return (ingredients.includes(uncheckedItems[i].value));\n    // });\n    // uncheckedItems[i].substitutes = substitutes.length === 0 ? null : substitutes[0];\n  }\n};\n\n\nclass IngredientsModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalOpen: false,\n      stopwords: null,\n      substitutions: null,\n      checkboxes: [],\n      allChecked: undefined,\n      error: false\n    };\n\n    this.mounted = false;\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getIngredientInputs(getSubstitutes = false) {\n    let ingredientInputs;\n\n    let noError;\n\n    ingredientInputs = this.props.ingredients.map((item, i) => {\n      let substitutions = null;\n      if(getSubstitutes && !this.state.checkboxes[i].checked) {\n        substitutions = (<Substitutions checkbox = {this.state.checkboxes[i]} />);\n      }\n\n      noError = (\n        <div>\n          <label>\n            <input id = {i} type = \"checkbox\" onChange = {this.handleChange} />\n            <span className = \"checkmark\" />\n            {item}\n          </label>\n          {substitutions}\n        </div>\n      );\n\n      return (\n        <li key = {i} className = \"ingredient\">\n          {this.state.error ? item : noError}\n        </li>\n      );\n    });\n\n    return ingredientInputs;\n  }\n\n  findSubstitutes(e) {\n    e.preventDefault();\n    let checkboxesState = JSON.parse(JSON.stringify(this.state.checkboxes));\n\n    let uncheckedItems = checkboxesState.filter(item => {\n      return !item.checked;\n    });\n\n    if(uncheckedItems.length === 0) {\n      this.setState({\n        allChecked: true\n      });\n      return;\n    }\n\n    processIngredients(uncheckedItems, this.state.stopwords);\n    getSubstitutes(uncheckedItems, this.state.substitutions);\n    this.setState({\n      checkboxes: checkboxesState,\n      allChecked: false\n    });\n  }\n\n  handleChange(e) {\n    let checkboxesState = JSON.parse(JSON.stringify(this.state.checkboxes));\n    checkboxesState[e.target.id].checked = e.target.checked;\n\n    this.setState({\n      checkboxes: checkboxesState\n    });\n  }\n\n  handleToggle() {\n\n    let checkboxesState = JSON.parse(JSON.stringify(this.state.checkboxes));\n\n    checkboxesState.forEach(item => {\n      item.checked = false;\n    });\n\n    this.setState(prevState => ({\n      modalOpen: !prevState.modalOpen,\n      checkboxes: checkboxesState,\n      allChecked: undefined\n    }));\n  }\n\n  componentDidMount() {\n\n    this.mounted = true;\n\n    let ingredientsInfo = this.props.ingredients.map(item => {\n      return {value: item, checked: false};\n    });\n\n    this.setState({\n      checkboxes: ingredientsInfo\n    });\n\n    fetch(\"assets/stopwords.json\")\n      .then(res => res.json())\n      .then((result) => {\n        if(this.mounted){\n          this.setState({\n            stopwords: result\n          });\n        }\n      }, (error) => {\n        console.error(error);\n        this.setState({\n          error: true\n        });\n      });\n\n      fetch(\"assets/substitutions.json\")\n        .then(res => res.json())\n        .then((result) => {\n          if(this.mounted){\n            this.setState({\n              substitutions: result\n            });\n          }\n        }, (error) => {\n          console.error(error);\n          this.setState({\n            error: true\n          });\n        });\n\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let modal = null;\n    let ingredientInputs;\n    let modalOpenError = this.state.error && this.state.modalOpen;\n\n    if(this.state.allChecked !== undefined && !this.state.allChecked) {\n      ingredientInputs = this.getIngredientInputs(true);\n    } else {\n      ingredientInputs = this.getIngredientInputs();\n    }\n\n    if(modalOpenError) {\n      modal = (\n        <Modal onClose = {this.handleToggle}>\n          <h1>Ingredients</h1>\n          <ul className = \"ingredients-list-error\">{ingredientInputs}</ul>\n        </Modal>\n      );\n    } else if(this.state.modalOpen) {\n      modal = (\n        <Modal onClose = {this.handleToggle}>\n          <h1>Ingredients</h1>\n          <p className = \"subs-description\">{\"Check off all the ingredients you have and we'll try to find substitutes for the rest.\"}</p>\n          <ul className = \"ingredients-list\">{ingredientInputs}</ul>\n          <button type = \"button\" className = \"find-substitutes-button\" onClick = {(e) => this.findSubstitutes(e)}>\n            Find Substitutes\n          </button>\n        </Modal>\n      );\n    }\n\n    return (\n      <div className = \"ingredients-modal\">\n        <button className = \"ingredients-button\" onClick = {this.handleToggle}>\n          Ingredients\n        </button>\n        {modal}\n      </div>\n    );\n  }\n}\n\nIngredientsModal.defaultProps = {\n  ingredients: []\n};\n\nIngredientsModal.propTypes = {\n  ingredients: PropTypes.array.isRequired\n};\n\nexport default IngredientsModal;\n","import IngredientsModal from './IngredientsModal';\n\nexport default IngredientsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IngredientsModal from '../IngredientsModal';\n\nimport './RecipeInfo.css';\n\nconst RecipeInfo = props => {\n\n  let healthLabels = null;\n\n  if(props.healthLabels) {\n    healthLabels = props.healthLabels.map((label, i) => {\n      return (<span key = {i} className = \"health-label\">{label}</span>);\n    });\n  }\n\n  let modal = props.ingredients ? <IngredientsModal ingredients = {props.ingredients} /> : null;\n  return (\n    <div className = \"recipe-info\">\n      <h2 className = \"title\">{props.title}</h2>\n      <div className = \"health-labels\">{healthLabels}</div>\n      <a target = \"_blank\" rel=\"noopener noreferrer\" href = {props.url}>Get Recipe!</a>\n      {modal}\n    </div>\n  );\n};\n\nRecipeInfo.defaultProps = {\n  healthLabels: null,\n  ingredients: null\n};\n\nRecipeInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  healthLabels: PropTypes.array,\n  ingredients: PropTypes.array\n};\n\nexport default RecipeInfo;\n","import RecipeInfo from './RecipeInfo';\n\nexport default RecipeInfo;\n","import HealthInfo from './HealthInfo';\n\nexport default HealthInfo;\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\nimport './HealthInfo.css';\n\nconst getChartInfo = (digest, numServings) => {\n  if(numServings === undefined) numServings = 1;\n\n  let data = [];\n  for(var i = 0; i < 3; i++) {\n    data.push(Math.round(digest[i].total/numServings));\n  }\n\n  let chartData = {\n    labels: [\"Fat (g)\", \"Carbs (g)\", \"Protein (g)\"],\n    datasets: [{\n      backgroundColor: [\"#FF7272\", \"#FFDF73\", \"#C4FF73\"],\n      data: data\n    }]\n  };\n\n  let chartOptions = {\n    legend: {\n      labels: {\n        boxWidth: 20,\n        fontSize: 12,\n        fontFamily: \"Cabin\",\n        fontColor: \"white\"\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n\n  return [chartData, chartOptions];\n};\n\nconst HealthInfo = props => {\n\n   let caloriesInfo = null;\n\n  if(props.calories && props.yield) {\n    caloriesInfo = (<h3 className = \"calories\">{Math.round(props.calories/props.yield)} calories</h3>);\n  } else if(props.calories) {\n    caloriesInfo = (<h3 className = \"calories\">{Math.round(props.calories)} calories</h3>);\n  }\n\n\n  let nutritionChart = null;\n\n  if(props.digest) {\n    let chartInfo = getChartInfo(props.digest, props.yield);\n    nutritionChart = (\n      <div className = \"chart\">\n        <Doughnut data = {chartInfo[0]} options = {chartInfo[1]}/>\n      </div>\n    );\n  }\n\n  return (\n    <div className = \"health-info\">\n      <h3 className = \"nutrition\">{props.yield ? \"Nutrition Per Serving\" : \"Nutrition (entire recipe)\"}</h3>\n      {caloriesInfo}\n      {props.digest ? null : <p>No additional health information.</p>}\n      {nutritionChart}\n    </div>\n  );\n};\n\nHealthInfo.propTypes = {\n  calories: PropTypes.number,\n  digest: PropTypes.array,\n  yield: PropTypes.number\n};\n\nexport default HealthInfo;\n","import RecipeItem from './RecipeItem';\n\nexport default RecipeItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeInfo from '../RecipeInfo';\nimport HealthInfo from '../HealthInfo';\n\nimport './RecipeItem.css';\n\nconst RecipeItem = props => {\n\n  return (\n    <li className = \"recipe-item\">\n      <img src = {props.image} alt = \"Recipe\" />\n      <RecipeInfo\n        title = {props.title}\n        url = {props.url}\n        healthLabels = {props.healthLabels}\n        ingredients = {props.ingredients}\n      />\n      <HealthInfo calories = {props.calories} digest = {props.digest} yield = {props.yield} />\n    </li>\n  );\n};\n\nRecipeItem.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.string,\n  url: PropTypes.string,\n  yield: PropTypes.number,\n  healthLabels: PropTypes.array,\n  ingredients: PropTypes.array,\n  calories: PropTypes.number,\n  digest: PropTypes.array\n};\n\nexport default RecipeItem;\n","import RecipesContainer from './RecipesContainer';\n\nexport default RecipesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeItem from '../RecipeItem';\n\nimport './RecipesContainer.css';\n\nconst RecipesContainer = props => {\n  let recipeItems;\n\n  recipeItems = props.recipes.map((item, i) => {\n    return (\n      <RecipeItem\n        key = {i}\n        title ={item.recipe.label}\n        image = {item.recipe.image}\n        url = {item.recipe.url}\n        yield = {item.recipe.yield}\n        healthLabels = {item.recipe.healthLabels}\n        ingredients = {item.recipe.ingredientLines}\n        calories= {item.recipe.calories}\n        digest = {item.recipe.digest}\n      />\n    );\n\n  });\n\n  return (\n    <div className = \"recipes-container\" style={props.suggestionsOpen ? {marginTop: 160} : null}>\n      {recipeItems}\n    </div>\n  );\n};\n\nRecipesContainer.propTypes = {\n  recipes: PropTypes.array.isRequired,\n  suggestionsOpen: PropTypes.bool.isRequired\n};\n\nexport default RecipesContainer;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport RecipesContainer from '../RecipesContainer';\nimport vegSign from './assets/vegetarian-mark.svg';\n\nimport './App.css';\n\nconst id = \"0492f55a\";\nconst key = \"8123095da3de3104e83077e6e4cb6506\t\";\nlet url = \"https://api.edamam.com/search?\";\n\n\nconst getRequest = (query, onlyVegan) => {\n  return url + \"q=\" + processQuery(query) + \"&app_id=\" + id + \"&app_key=\" + key + \"&health=vegetarian\"\n    + (onlyVegan ? \"&health=vegan\" : \"\") + \"&from=0&to=20\";\n};\n\nconst processQuery = (query) => {\n  let queryArray = query.toLowerCase().split(/\\s+/);\n  let queryString = \"\";\n\n  for(let i = 0; i < queryArray.length-1; i++) {\n    queryString += queryArray[i] + \"+\";\n  }\n\n  queryString += queryArray[queryArray.length-1];\n\n  return queryString;\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      suggestions: [],\n      recipesResult: null,\n      error: false,\n      noResults: false,\n      inputFocus: false,\n      loading: false\n    };\n\n    this.mounted = false;\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleFocus = this.toggleFocus.bind(this);\n  }\n\n  toggleFocus() {\n    this.setState(prevState => ({\n      inputFocus: !prevState.inputFocus\n    }));\n  }\n\n  handleSubmit(query, onlyVegan) {\n    this.setState({\n      loading: true\n    });\n\n    fetch(getRequest(query, onlyVegan))\n      .then(res => res.json())\n      .then((result) => {\n        if(result[\"count\"] === 0) {\n          this.setState({\n            noResults: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            recipesResult: result[\"hits\"],\n            loading: false\n          });\n        }\n      }, (error) => {\n        this.setState({\n          error: true,\n          loading: false\n        });\n      });\n}\n\n  componentDidMount() {\n    this.mounted = true;\n    fetch(\"assets/suggestions.json\")\n      .then(res => res.json())\n      .then((result) => {\n        if(this.mounted){\n          this.setState({\n            suggestions: result\n          });\n        }\n      }, (error) => {\n        //if error occurs, keep suggestions an empty array\n        //autosuggest will not work, it will be a regular text input component\n        console.error(\"Sorry, an error occurred while trying to get suggestion data.\");\n      });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let recipesContainer;\n\n    if(this.state.loading)\n      recipesContainer = (<div className = \"loading\">Loading...</div>);\n    else if(this.state.error)\n      recipesContainer = (<div className = \"error\">Sorry, something went wrong.</div>);\n    else if(this.state.noResults)\n      recipesContainer = (<div className = \"error\">Sorry, no results found for your search.</div>);\n    else if(this.state.recipesResult)\n      recipesContainer = (<RecipesContainer recipes = {this.state.recipesResult} suggestionsOpen = {this.state.inputFocus} />);\n\n    return (\n      <div className=\"app\">\n        <div className = \"heading\">\n          <h1>PRESTO</h1>\n          <img src={vegSign} alt=\"Veg Sign\"/>\n          <p>A vegan & vegetarian recipe search engine!</p>\n        </div>\n        <SearchBar\n          onSubmit = {this.handleSubmit}\n          toggleFocus = {this.toggleFocus}\n          suggestions = {this.state.suggestions} />\n        {recipesContainer}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/vegetarian-mark.31ffd1dc.svg\";"],"sourceRoot":""}